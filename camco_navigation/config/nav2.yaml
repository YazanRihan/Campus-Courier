bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: False

controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 10.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    controller_plugins: ["FollowPath"]
    odom_topic: "odom"
    # DWB follow path controller parameters
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: -0.20
      min_vel_y: 0.0
      max_vel_x: 0.7
      max_vel_y: 0.0
      max_vel_theta: 1.0
      min_speed_xy: 0.0
      max_speed_xy: 0.5
      min_speed_theta: 0.0
      # Add high threshold velocity for turtlebot 3 issue.
      # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
      acc_lim_x: 2.5
      acc_lim_y: 0.0
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.2
      vx_samples: 20
      vy_samples: 0
      vtheta_samples: 40
      sim_time: 2.0
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.05
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.04
      PathAlign.scale: 50.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 10.0
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 50.0
      GoalDist.scale: 10.0
      RotateToGoal.scale: 50.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0
    # MPPI Follow path controller parameters
    # FollowPath:
    #   plugin: "nav2_mppi_controller::MPPIController"
    #   time_steps: 56
    #   model_dt: 0.05
    #   batch_size: 2000
    #   vx_std: 0.2
    #   vy_std: 0.2
    #   wz_std: 0.4
    #   vx_max: 0.7
    #   vx_min: -0.35
    #   vy_max: 0.5
    #   wz_max: 1.9
    #   iteration_count: 1
    #   prune_distance: 1.7
    #   transform_tolerance: 0.1
    #   temperature: 0.3
    #   gamma: 0.015
    #   motion_model: "DiffDrive"
    #   visualize: false
    #   reset_period: 1.0 # (only in Humble)
    #   regenerate_noises: false
    #   TrajectoryVisualizer:
    #     trajectory_step: 5
    #     time_step: 3
    #   AckermannConstraints:
    #     min_turning_r: 0.2
    #   critics: ["ConstraintCritic", "ObstaclesCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic"]
    #   ConstraintCritic:
    #     enabled: true
    #     cost_power: 1
    #     cost_weight: 4.0
    #   GoalCritic:
    #     enabled: true
    #     cost_power: 1
    #     cost_weight: 5.0
    #     threshold_to_consider: 1.4
    #   GoalAngleCritic:
    #     enabled: true
    #     cost_power: 1
    #     cost_weight: 3.0
    #     threshold_to_consider: 0.5
    #   PreferForwardCritic:
    #     enabled: true
    #     cost_power: 1
    #     cost_weight: 5.0
    #     threshold_to_consider: 0.5
    #   ObstaclesCritic:
    #     enabled: true
    #     cost_power: 1
    #     repulsion_weight: 1.5
    #     critical_weight: 20.0
    #     consider_footprint: false
    #     collision_cost: 10000.0
    #     collision_margin_distance: 0.1
    #     near_goal_distance: 0.5
    #     inflation_radius: 0.55 # (only in Humble)
    #     cost_scaling_factor: 10.0 # (only in Humble)
    #   # CostCritic:
    #   #   enabled: true
    #   #   cost_power: 1
    #   #   cost_weight: 3.81
    #   #   critical_cost: 300.0
    #   #   consider_footprint: true
    #   #   collision_cost: 1000000.0
    #   #   near_goal_distance: 1.0
    #   PathAlignCritic:
    #     enabled: true
    #     cost_power: 1
    #     cost_weight: 14.0
    #     max_path_occupancy_ratio: 0.05
    #     trajectory_point_step: 3
    #     threshold_to_consider: 0.5
    #     offset_from_furthest: 20
    #     use_path_orientations: false
    #   PathFollowCritic:
    #     enabled: true
    #     cost_power: 1
    #     cost_weight: 5.0
    #     offset_from_furthest: 5
    #     threshold_to_consider: 1.4
    #   PathAngleCritic:
    #     enabled: true
    #     cost_power: 1
    #     cost_weight: 2.0
    #     offset_from_furthest: 4
    #     threshold_to_consider: 0.5
    #     max_angle_to_furthest: 1.0
    #     mode: 0
    #   # TwirlingCritic:
    #   #   enabled: true
    #   #   twirling_cost_power: 1
    #   #   twirling_cost_weight: 10.0

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: False
      rolling_window: true
      width: 9
      height: 6
      resolution: 0.05
      robot_radius: 0.22
      plugin_names: ["obstacle_layer", "voxel_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.55
        cost_scaling_factor: 3.0
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          min_obstacle_height: 0.0
          obstacle_max_range: 6.0
          obstacle_min_range: 0.0
          raytrace_max_range: 10.0
          raytrace_min_range: 0.0
          clearing: True
          marking: True
          data_type: "LaserScan"
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: pointcloud
        pointcloud:
          topic: /intel_realsense_r200_depth/points
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "PointCloud2"
      static_layer:
        map_subscribe_transient_local: True
      always_send_full_costmap: True
  local_costmap_client:
    ros__parameters:
      use_sim_time: False
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

# local_costmap:
#   local_costmap:
#     ros__parameters:
#       update_frequency: 5.0
#       publish_frequency: 2.0
#       global_frame: odom
#       robot_base_frame: base_link
#       use_sim_time: False
#       rolling_window: true
#       width: 3
#       height: 3
#       resolution: 0.05
#       robot_radius: 0.22
#       plugins: ["obstacle_layer", "inflation_layer"]
#       inflation_layer:
#         plugin: "nav2_costmap_2d::InflationLayer"
#         cost_scaling_factor: 3.0
#         inflation_radius: 0.55
#       obstacle_layer:
#         plugin: "nav2_costmap_2d::ObstacleLayer"
#         enabled: True
#         observation_sources: scan
#         scan:
#          topic: /scan
#          max_obstacle_height: 2.0
#          clearing: True
#          marking: True
#          data_type: "LaserScan"
#       static_layer:
#         map_subscribe_transient_local: True
#       always_send_full_costmap: True
#   local_costmap_client:
#     ros__parameters:
#       use_sim_time: False
#   local_costmap_rclcpp_node:
#     ros__parameters:
#       use_sim_time: False

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publsih_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: False
      robot_radius: 0.22
      resolution: 0.05
      plugins: ["static_layer", "obstacle_layer", "voxel_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          min_obstacle_height: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          clearing: True
          marking: True
          data_type: "LaserScan"
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: pointcloud
        pointcloud:
          topic: /intel_realsense_r200_depth/points
          max_obstacle_height: 2.0
          min_obstacle_height: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          clearing: True
          marking: True
          data_type: "PointCloud2"
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        enabled: True
        subscribe_to_updates: true
        transform_tolerance: 0.1
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.55
        cost_scaling_factor: 1.0
      always_send_full_costmap: True
  global_costmap_client:
    ros__parameters:
      use_sim_time: False
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

recoveries_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    recovery_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_recoveries/Spin"
    backup:
      plugin: "nav2_recoveries/BackUp"
    wait:
      plugin: "nav2_recoveries/Wait"
    global_frame: odom
    robot_base_frame: base_link
    transform_timeout: 0.1
    use_sim_time: False
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

velocity_smoother:
  ros__parameters:
    use_sim_time: True
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [0.26, 0.0, 1.0]
    min_velocity: [-0.26, 0.0, -1.0]
    max_accel: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0

robot_state_publisher:
  ros__parameters:
    use_sim_time: False