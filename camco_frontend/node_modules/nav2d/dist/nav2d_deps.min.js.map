{"version":3,"file":"nav2d_deps.min.js","mappings":"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","sources":["webpack://nav2d/webpack/universalModuleDefinition","webpack://nav2d/./node_modules/earcut/src/earcut.js","webpack://nav2d/./node_modules/point-in-polygon/flat.js","webpack://nav2d/./node_modules/point-in-polygon/index.js","webpack://nav2d/./node_modules/point-in-polygon/nested.js","webpack://nav2d/./node_modules/simple-quadtree/qtree.js","webpack://nav2d/webpack/bootstrap","webpack://nav2d/webpack/runtime/define property getters","webpack://nav2d/webpack/runtime/hasOwnProperty shorthand","webpack://nav2d/webpack/runtime/make namespace object","webpack://nav2d/./src/math.js","webpack://nav2d/./node_modules/uuid/dist/esm-browser/rng.js","webpack://nav2d/./node_modules/uuid/dist/esm-browser/regex.js","webpack://nav2d/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://nav2d/./node_modules/uuid/dist/esm-browser/validate.js","webpack://nav2d/./node_modules/uuid/dist/esm-browser/v4.js","webpack://nav2d/./node_modules/tinyqueue/index.js","webpack://nav2d/./src/navmesh.js","webpack://nav2d/./src/nav2d.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nav2d\"] = factory();\n\telse\n\t\troot[\"nav2d\"] = factory();\n})((typeof self !== 'undefined' ? self : this), () => {\nreturn ","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 32767 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize, 0);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim | 0);\n            triangles.push(ear.i / dim | 0);\n            triangles.push(next.i / dim | 0);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    var p = c.next;\n    while (p !== a) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    var ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n    // triangle bbox; min & max are calculated like this for speed\n    var x0 = ax < bx ? (ax < cx ? ax : cx) : (bx < cx ? bx : cx),\n        y0 = ay < by ? (ay < cy ? ay : cy) : (by < cy ? by : cy),\n        x1 = ax > bx ? (ax > cx ? ax : cx) : (bx > cx ? bx : cx),\n        y1 = ay > by ? (ay > cy ? ay : cy) : (by > cy ? by : cy);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(x0, y0, minX, minY, invSize),\n        maxZ = zOrder(x1, y1, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n            pointInTriangle(ax, ay, bx, by, cx, cy, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim | 0);\n            triangles.push(p.i / dim | 0);\n            triangles.push(b.i / dim | 0);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize, 0);\n                earcutLinked(c, triangles, dim, minX, minY, invSize, 0);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        outerNode = eliminateHole(queue[i], outerNode);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    var bridge = findHoleBridge(hole, outerNode);\n    if (!bridge) {\n        return outerNode;\n    }\n\n    var bridgeReverse = splitPolygon(bridge, hole);\n\n    // filter collinear points around the cuts\n    filterPoints(bridgeReverse, bridgeReverse.next);\n    return filterPoints(bridge, bridge.next);\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                m = p.x < p.next.x ? p : p.next;\n                if (x === hx) return m; // hole touches outer segment; pick leftmost endpoint\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === 0) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = (x - minX) * invSize | 0;\n    y = (y - minY) * invSize | 0;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) >= (ax - px) * (cy - py) &&\n           (ax - px) * (by - py) >= (bx - px) * (ay - py) &&\n           (bx - px) * (cy - py) >= (cx - px) * (by - py);\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = 0;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","module.exports = function pointInPolygonFlat (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = (end-start)/2;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[start+i*2+0], yi = vs[start+i*2+1];\n        var xj = vs[start+j*2+0], yj = vs[start+j*2+1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","var pointInPolygonFlat = require('./flat.js')\nvar pointInPolygonNested = require('./nested.js')\n\nmodule.exports = function pointInPolygon (point, vs, start, end) {\n    if (vs.length > 0 && Array.isArray(vs[0])) {\n        return pointInPolygonNested(point, vs, start, end);\n    } else {\n        return pointInPolygonFlat(point, vs, start, end);\n    }\n}\nmodule.exports.nested = pointInPolygonNested\nmodule.exports.flat = pointInPolygonFlat\n","// ray-casting algorithm based on\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n\nmodule.exports = function pointInPolygonNested (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = end - start;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[i+start][0], yi = vs[i+start][1];\n        var xj = vs[j+start][0], yj = vs[j+start][1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","/**\n*\n* simple-quadtree is a minimal quadtree implementation that supports simple put, get,\n* remove and clear operations on objects having a x, y position and w, h dimension.\n*\n* Copyright (c) 2013 Antti Saarinen <antti.p.saarinen@gmail.com>\n* https://github.com/asaarinen/qtree\n*\n*/\nfunction QuadTree(x, y, w, h, options) {\n\n    if( typeof x != 'number' || isNaN(x) )\n        x = 0;\n    if( typeof y != 'number' || isNaN(y) )\n        y = 0;\n    if( typeof w != 'number' || isNaN(w) )\n        w = 10;\n    if( typeof h != 'number' || isNaN(h) )\n        h = 10;\n    \n    var maxc = 25;\n    var leafratio = 0.5;\n    if( options ) {\n        if( typeof options.maxchildren == 'number' )\n            if( options.maxchildren > 0 )\n                maxc = options.maxchildren;\n        if( typeof options.leafratio == 'number' )\n            if( options.leafratio >= 0 )\n                leafratio = options.leafratio;\n    }\n\n    // validate an input object\n    function validate(obj) {\n        if( !obj )\n            return false;\n        if( typeof obj.x != 'number' ||\n            typeof obj.y != 'number' ||\n            typeof obj.w != 'number' ||\n            typeof obj.h != 'number' )\n            return false;\n        if( isNaN(obj.x) || isNaN(obj.y) ||\n            isNaN(obj.w) || isNaN(obj.h) )\n            return false;\n        if( obj.w < 0 || obj.h < 0 )\n            return false;\n        return true;\n    }\n\n    // test for deep equality for x,y,w,h\n    function isequal(o1, o2) {\n        if( o1.x == o2.x &&\n            o1.y == o2.y &&\n            o1.w == o2.w &&\n            o1.h == o2.h )\n            return true;\n        return false;\n    }\n\n    // create a new quadtree node\n    function createnode(x, y, w, h) {\n        return {\n            x: x,\n            y: y,\n            w: w,\n            h: h,\n            c: [],\n            l: [],\n            n: []\n        }\n    }\n\n    // root node used by this quadtree\n    var root = createnode(x, y, w, h);\n\n    // calculate distance between two points\n    function distance(x1, y1, x2, y2) {\n        return Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\n    }\n    \n    // calculate distance between a point and a line (segment)\n    function distancePL(x, y, x1, y1, dx1, dy1, len1 ) {\n        if( !len1 ) // in case length is not provided, assume a line \n            len1 = -1;\n        \n        // x = x1 + s * dx1 + t * dy1\n        // y = y1 + s * dy1 - t * dx1\n        // x * dy1 - y * dx1 = x1 * dy1 - y1 * dx1 + \n        //                     t * ( dy1 * dy1 + dx1 * dx1 )\n        var t = dx1 * dx1 + dy1 * dy1;\n        if( t == 0 )\n            return null;\n        else {\n            t = ( x * dy1 - y * dx1 - x1 * dy1 + y1 * dx1 ) / t;\n            if( Math.abs(dx1) > Math.abs(dy1) )\n                var s = ( x - x1 - t * dy1 ) / dx1;\n            else\n                var s = ( y - y1 + t * dx1 ) / dy1;\n            if( ( s >= 0 && s <= len1 ) || len1 < 0 )\n                return {\n                    s: s,\n                    t: t,\n                    x: x1 + s * dx1,\n                    y: y1 + s * dy1,\n                    dist: Math.abs(t)\n                };\n            else if( s < 0 ) { \n                var dist = distance(x, y, x1, y1);\n                return {\n                    s: s,\n                    dist: dist\n                };\n            } else {\n                var dist = distance(x, y,\n                                    x1 + len1*dx1, \n                                    y1 + len1*dy1);\n                return {\n                    s: s,\n                    dist: dist\n                };\n            }\n        }\n    }\n    \n    // does a line and a rectangle overlap ?\n    function overlap_line(o1, o2, buf) {\n        if( !o1 || !o2 )\n            return true;\n        var dist = distancePL(o2.x + 0.5 * o2.w,\n                              o2.y + 0.5 * o2.h,\n                              o1.x, o1.y, o1.dx, o1.dy, o1.dist);\n        if( dist ) {\n            dist.dist -= buf;\n            if( dist.dist < 0 )\n                return true;\n            if( dist.dist * dist.dist <= o2.w * o2.w + o2.h * o2.h )\n                return true;\n        }\n        return false;\n    }\n\n    // do two rectangles overlap ?\n    function overlap_rect(o1, o2, buf) {\n        if( !o1 || !o2 )\n            return true;\n        if( o1.x + o1.w < o2.x - buf ||\n            o1.y + o1.h < o2.y - buf ||\n            o1.x - buf > o2.x + o2.w ||\n            o1.y - buf > o2.y + o2.h )\n            return false;\n        return true;\n    }\n\n    function isleaf(node, obj) {\n\n        var leaf = false;\n        if( obj.w * obj.h > node.w * node.h * leafratio )\n            leaf = true;\n\n        if( obj.x < node.x ||\n            obj.y < node.y ||\n            obj.x + obj.w > node.x + node.w ||\n            obj.y + obj.h > node.y + node.h )\n            leaf = true;\n\n        var childnode = null;\n        for( var ni = 0; ni < node.n.length; ni++ )\n            if( overlap_rect(obj, node.n[ni], 0) ) {\n                if( childnode ) { // multiple hits\n                    leaf = true;\n                    break;\n                } else\n                    childnode = node.n[ni];\n            }\n        \n        return { leaf: leaf,\n                 childnode: childnode };\n    }\n\n    // put an object to one of the child nodes of this node\n    function put_to_nodes(node, obj) {\n        var leaf = isleaf(node, obj);\n        if( leaf.leaf )\n            node.l.push(obj);\n        else if( leaf.childnode )\n            put(leaf.childnode, obj);\n        else\n            return;\n    }\n    \n    function update_coords(obj, updatedcoords) {\n        obj.x = ((typeof updatedcoords.x == 'number') ? updatedcoords.x : obj.x);\n        obj.y = ((typeof updatedcoords.y == 'number') ? updatedcoords.y : obj.y);\n        obj.w = ((typeof updatedcoords.w == 'number') ? updatedcoords.w : obj.w);\n        obj.h = ((typeof updatedcoords.h == 'number') ? updatedcoords.h : obj.h);\n    }\n\n    function update(node, obj, attr, updatedcoords) {\n        if( typeof attr == 'object' && typeof updatedcoords == 'undefined' ) {\n            updatedcoords = attr;\n            attr = false;\n        }\n\n        if( !validate(obj) || typeof updatedcoords == 'undefined' )\n            return false;\n\n        if( !attr )\n            attr = false;\n        else if( typeof attr != 'string' )\n            attr = 'id';\n\n        var count = 0;\n        for( var ci = 0; ci < node.c.length; ci++ )\n            if( ( attr && node.c[ci][attr] == obj[attr] ) ||\n                ( !attr && isequal(node.c[ci], obj) ) ) {\n\n                // found the object to be updated\n                var orig = node.c[ci];\n                update_coords(orig, updatedcoords);\n                \n                if( orig.x > node.x + node.w ||\n                    orig.y > node.y + node.h ||\n                    orig.x + orig.w < node.x ||\n                    orig.y + orig.h < node.y ) {\n\n                    // this object needs to be removed and added\n                    node.c.splice(ci, 1);\n                    put(root, orig);\n                } // updated object is still inside same node\n                \n                return true;\n            }\n        \n        for( var ci = 0; ci < node.l.length; ci++ )\n            if( ( attr && node.l[ci][attr] == obj[attr] ) ||\n                ( !attr && isequal(node.l[ci], obj) ) ) {\n                \n                var orig = node.l[ci];\n                update_coords(orig, updatedcoords);\n                \n                // found the object to be updated\n                if( orig.x > node.x + node.w ||\n                    orig.y > node.y + node.h ||\n                    orig.x + orig.w < node.x ||\n                    orig.y + orig.h < node.y ) {\n\n                    // this object needs to be removed and added \n                    node.l.splice(ci, 1);\n                    put(root, orig);\n                } // updated object is still inside same node\n                \n                return true;\n            }\n\n        var leaf = isleaf(node, obj);\n        if( !leaf.leaf && leaf.childnode )\n            if( update(leaf.childnode, obj, attr) )\n                return true;\n        return false;\n    }\n\n    // remove an object from this node\n    function remove(node, obj, attr) {\n        if( !validate(obj) )\n            return 0;\n\n        if( !attr )\n            attr = false;\n        else if( typeof attr != 'string' )\n            attr = 'id';\n\n        var count = 0;\n        for( var ci = 0; ci < node.c.length; ci++ )\n            if( ( attr && node.c[ci][attr] == obj[attr] ) ||\n                ( !attr && isequal(node.c[ci], obj) ) ) {\n                count++;\n                node.c.splice(ci, 1);\n                ci--;\n            }\n\n        for( var ci = 0; ci < node.l.length; ci++ )\n            if( ( attr && node.l[ci][attr] == obj[attr] ) ||\n                ( !attr && isequal(node.l[ci], obj) ) ) {\n                count++;\n                node.l.splice(ci, 1);\n                ci--;\n            }\n\n        var leaf = isleaf(node, obj);\n        if( !leaf.leaf && leaf.childnode )\n            return count + remove(leaf.childnode, obj, attr);\n        return count;\n    }\n\n    // put an object to this node\n    function put(node, obj) {\n\n        if( !validate(obj) )\n            return;\n\n        if( node.n.length == 0 ) {\n            node.c.push(obj);\n            \n            // subdivide\n            if( node.c.length > maxc ) {\n                var w2 = node.w / 2;\n                var h2 = node.h / 2;\n                node.n.push(createnode(node.x, node.y, w2, h2),\n                            createnode(node.x + w2, node.y, w2, h2),\n                            createnode(node.x, node.y + h2, w2, h2),\n                            createnode(node.x + w2, node.y + h2, w2, h2));\n                for( var ci = 0; ci < node.c.length; ci++ ) \n                    put_to_nodes(node, node.c[ci]);\n                node.c = [];\n            }\n        } else \n            put_to_nodes(node, obj);\n    }\n\n    // iterate through all objects in this node matching given overlap\n    // function\n    function getter(overlapfun, node, obj, buf, strict, callbackOrArray) {\n        for( var li = 0; li < node.l.length; li++ )\n            if( !strict || overlapfun(obj, node.l[li], buf) )\n                if( typeof callbackOrArray == 'object' )\n                    callbackOrArray.push(node.l[li]);\n                else if( !callbackOrArray(node.l[li]) )\n                    return false;\n        for( var li = 0; li < node.c.length; li++ )\n            if( !strict || overlapfun(obj, node.c[li], buf) )\n                if( typeof callbackOrArray == 'object' )\n                    callbackOrArray.push(node.c[li]);\n                else if( !callbackOrArray(node.c[li]) )\n                    return false;\n        for( var ni = 0; ni < node.n.length; ni++ ) {\n            if( overlapfun(obj, node.n[ni], buf) ) {\n                if( typeof callbackOrArray == 'object' )\n                    callbackOrArray.concat(getter(overlapfun, node.n[ni], obj, buf, strict, callbackOrArray));\n                else if( !getter(overlapfun, node.n[ni], obj, buf, strict, callbackOrArray) )\n                    return false;\n            }\n        }\n        return true;\n    }\n\n    // iterate through all objects in this node matching the given rectangle\n    function get_rect(node, obj, buf, callbackOrArray) {\n        return getter(overlap_rect, node, obj, buf, true, callbackOrArray);\n    }\n\n    // iterate through all objects in this node matching the given\n    // line (segment)\n    function get_line(node, obj, buf, callbackOrArray) {\n        return getter(overlap_line, node, obj, buf, false, callbackOrArray);\n    }\n\n    // iterate through all objects in this node matching given\n    // geometry, either a rectangle or a line segment\n    function get(node, obj, buf, callbackOrArray) {\n\n        if( (typeof buf == 'function' || typeof buf == 'object') && typeof callbackOrArray == 'undefined' ) {\n            callbackOrArray = buf;\n            buf = 0;\n        }\n        if( typeof callbackOrArray == 'undefined' ) {\n            callbackOrArray = [];\n            buf = 0;\n        }\n        if( obj == null )\n            get_rect(node, obj, buf, callbackOrArray);\n        else if( typeof obj.x == 'number' &&\n                 typeof obj.y == 'number' &&\n                 !isNaN(obj.x) && !isNaN(obj.y) ) {\n            if( typeof obj.dx == 'number' &&\n                typeof obj.dy == 'number' &&\n                !isNaN(obj.dx) && !isNaN(obj.dy) )\n                get_line(node, obj, buf, callbackOrArray);\n            else if( typeof obj.w == 'number' &&\n                     typeof obj.h == 'number' &&\n                     !isNaN(obj.w) && !isNaN(obj.h) )\n                get_rect(node, obj, buf, callbackOrArray);\n        }\n        if( typeof callbackOrArray == 'object' ) \n            return callbackOrArray;\n    }\n\n    // return the object interface\n    return {\n        get: function(obj, buf, callbackOrArray) {\n            return get(root, obj, buf, callbackOrArray);\n        },\n        put: function(obj) {\n            put(root, obj);\n        },\n        update: function(obj, attr, updatedcoords) {\n            return update(root, obj, attr, updatedcoords);\n        },\n        remove: function(obj, attr) {\n            return remove(root, obj, attr);\n        },\n        clear: function() {\n            root = createnode(x, y, w, h);\n        },\n        stringify: function() {\n            var strobj = {\n                x: x, y: y, w: w, h: h,\n                maxc: maxc, \n                leafratio: leafratio,\n                root: root\n            };\n            try {\n                return JSON.stringify(strobj);\n            } catch(err) {\n                // could not stringify\n                // probably due to objects included in qtree being non-stringifiable\n                return null; \n            }\n        },\n        parse: function(str) {\n            if( typeof str == 'string' )\n                str = JSON.parse(str);\n            \n            x = str.x;\n            y = str.y;\n            w = str.w;\n            h = str.h;\n            maxc = str.maxc;\n            leafratio = str.leafratio;\n            root = str.root;\n        }\n    };\n}\n\n// for use within node.js\nif( typeof module != 'undefined' )\n    module.exports = QuadTree;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const EPS = 1e-8;\n\nexport class Vector {\n    constructor(x, y) {\n        if (typeof x !== \"number\" || typeof y !== \"number\") {\n            throw new Error(\"Vector components must be numbers.\");\n        }\n\n        this.x = x;\n        this.y = y;\n    }\n\n    _normOther(other) {\n        if (typeof other == \"number\") {\n            return new Vector(other, other);\n        }\n        return other;\n    }\n\n    add(other) {\n        other = this._normOther(other);\n        return new Vector(this.x + other.x, this.y + other.y);\n    }\n\n    sub(other) {\n        other = this._normOther(other);\n        return new Vector(this.x - other.x, this.y - other.y);\n    }\n\n    mul(other) {\n        other = this._normOther(other);\n        return new Vector(this.x * other.x, this.y * other.y);\n    }\n\n    div(other) {\n        other = this._normOther(other);\n        return new Vector(this.x / other.x, this.y / other.y);\n    }\n\n    length() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    equals(other) {\n        return isclose(this.x, other.x) && isclose(this.y, other.y);\n    }\n\n    angle(other) {\n        return Math.acos(\n            clip(-1, 1, dot(this, other) / (this.length() * other.length()))\n        );\n    }\n\n    counterclockwiseAngle(other) {\n        const angle = this.angle(other);\n        return cross(this, other) >= 0 ? angle : 2 * Math.PI - angle;\n    }\n\n    toString() {\n        return `{ x: ${this.x}, y: ${this.y} }`;\n    }\n}\n\nexport function dot(a, b) {\n    return a.x * b.x + a.y * b.y;\n}\n\nexport function cross(a, b) {\n    return a.x * b.y - a.y * b.x;\n}\n\nexport function isclose(a, b, eps = EPS) {\n    return a > b - eps && a < b + eps;\n}\n\nexport function clip(a, b, v) {\n    if (v < a) return a;\n    if (v > b) return b;\n    return v;\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import { v4 as uuidv4 } from \"uuid\";\nimport inside from \"point-in-polygon\";\nimport earcut from \"earcut\";\nimport QuadTree from \"simple-quadtree\";\nimport TinyQueue from \"tinyqueue\";\n\nimport { Vector, isclose, cross, dot } from \"./math.js\";\n\nfunction _normalizePoint(point) {\n    if (point instanceof Array) {\n        return new Vector(...point);\n    } else if (point instanceof Vector) {\n        return point;\n    } else if (point.hasOwnProperty(\"x\") && point.hasOwnProperty(\"y\")) {\n        return new Vector(point.x, point.y);\n    }\n}\n\nexport class Edge {\n    constructor(p1, p2) {\n        this._uuid = uuidv4();\n        this.p1 = _normalizePoint(p1);\n        this.p2 = _normalizePoint(p2);\n    }\n\n    length() {\n        return this.p1.sub(this.p2).length();\n    }\n\n    direction() {\n        return this.p1.sub(this.p2);\n    }\n\n    onEdge(point) {\n        point = _normalizePoint(point);\n        const pointVec = this.p1.sub(point);\n\n        if (!this.parallel(pointVec)) return false;\n\n        // test that it's not only collinear, but falls between p1 and p2\n        const direction = this.direction();\n        const len = this.length();\n        const component = dot(direction, pointVec) / (len * len);\n        return component >= 0 && component <= 1;\n    }\n\n    parallel(other) {\n        const otherDirection =\n            other instanceof Vector ? other : other.p1.sub(other.p2);\n        return isclose(cross(this.direction(), otherDirection), 0);\n    }\n\n    collinear(other) {\n        const direction = this.direction();\n        const otherVec1 = this.p1.sub(other.p1);\n        const otherVec2 = this.p1.sub(other.p2);\n        return (\n            isclose(cross(direction, otherVec1), 0) &&\n            isclose(cross(direction, otherVec2), 0)\n        );\n    }\n\n    overlap(other) {\n        if (!this.collinear(other)) {\n            throw new Error(\n                \"Cannot compute overlap of two non-collinear edges.\"\n            );\n        }\n\n        let endpoints = [];\n\n        if (this.onEdge(other.p1)) endpoints.push(other.p1);\n        if (this.onEdge(other.p2)) endpoints.push(other.p2);\n        if (other.onEdge(this.p1)) endpoints.push(this.p1);\n        if (other.onEdge(this.p2)) endpoints.push(this.p2);\n\n        // enpoints can also be the an array with twice the same point,\n        // which is fine as it yields a zero-length edge\n        if (endpoints.length > 2) {\n            endpoints = endpoints.filter(\n                (p, i) => endpoints.findIndex((op) => op.equals(p)) === i\n            );\n        }\n\n        if (!endpoints.length) {\n            return null;\n        } else if (endpoints.length == 1) {\n            endpoints = [endpoints[0], endpoints[0]];\n        }\n\n        return new Edge(...endpoints);\n    }\n\n    equals(other) {\n        return (\n            (this.p1.equals(other.p1) && this.p2.equals(other.p2)) ||\n            (this.p1.equals(other.p2) && this.p2.equals(other.p1))\n        );\n    }\n}\n\nexport class Polygon {\n    constructor(points) {\n        this._uuid = uuidv4();\n        this.points = points.map(_normalizePoint);\n        this.bounds = this._computeBounds();\n    }\n\n    _computeBounds() {\n        return this.points.reduce(\n            (a, p) => [\n                Math.min(p.x, a[0]),\n                Math.min(p.y, a[1]),\n                Math.max(p.x, a[2]),\n                Math.max(p.y, a[3]),\n            ],\n            [Infinity, Infinity, -Infinity, -Infinity]\n        );\n    }\n\n    edges() {\n        return this.points.map(\n            (point, i) =>\n                new Edge(\n                    i == 0\n                        ? this.points[this.points.length - 1]\n                        : this.points[i - 1],\n                    point\n                )\n        );\n    }\n\n    centroid() {\n        return this.points\n            .reduce((acc, point) => acc.add(point), new Vector(0, 0))\n            .div(this.points.length);\n    }\n\n    centroidDistance(other) {\n        const centroidVector = this.centroid().sub(other.centroid());\n        return centroidVector.length();\n    }\n\n    contains(point) {\n        point = _normalizePoint(point);\n        const polyPoints = this.points.map(this._toPointArray);\n        return (\n            inside(this._toPointArray(point), polyPoints) ||\n            !!this.onEdge(point)\n        );\n    }\n\n    _toPointArray(point) {\n        return [point.x, point.y];\n    }\n\n    onEdge(point) {\n        point = _normalizePoint(point);\n        for (const edge of this.edges()) {\n            if (edge.onEdge(point)) return edge;\n        }\n\n        return null;\n    }\n\n    touches(otherEdge) {\n        for (const edge of this.edges()) {\n            if (\n                (edge.onEdge(otherEdge.p1) || edge.onEdge(otherEdge.p2)) &&\n                edge.collinear(otherEdge)\n            ) {\n                return edge;\n            }\n        }\n\n        return null;\n    }\n\n    boundsSize() {\n        const [minx, miny, maxx, maxy] = this.bounds;\n        return { x: minx, y: miny, w: maxx - minx, h: maxy - miny };\n    }\n}\n\nexport class NavMesh {\n    constructor(polygons, options = {}, heuristicFunc = null) {\n        this._uuid = uuidv4();\n\n        options = {\n            triangulate: true,\n            pointQuerySize: 0.01,\n            ...options, // Yes, this works even if options is null or a function!\n        };\n        // The following ifs provide backward compatibility\n        if (typeof options === 'function') {\n            console.warn(\n                \"DEPRECATION WARNING: nav2d now uses the signature \"\n                + \"NavMesh(polygons, options = { costFunc: ..., heuristicFunc: ... }) \"\n                + \"but you are using the old signature NavMesh(polygons, costFunc, heuristicFunc). \"\n                + \"Please update, the code will break in a future release.\"\n            );\n            options.costFunc = options;\n        }\n        if (typeof heuristicFunc === 'function') {\n            console.warn(\n                \"DEPRECATION WARNING: nav2d now uses the signature \"\n                + \"NavMesh(polygons, options = { costFunc: ..., heuristicFunc: ... }) \"\n                + \"but you are using the old signature NavMesh(polygons, costFunc, heuristicFunc). \"\n                + \"Please update, the code will break in a future release.\"\n            );\n            options.heuristicFunc = heuristicFunc;\n        }\n        \n        this.costFunc = options.costFunc || ((a, b) => this._computeDistance(a, b));\n        this.heuristicFunc = options.heuristicFunc || ((a, b) => this._computeDistance(a, b));\n\n        if (options.triangulate) {\n            polygons = this._triangulate(polygons);\n        }\n        this.polygons = polygons.map((points) => new Polygon(points));\n\n        // This will be used to check point collision with\n        // triangles. This should be much smaller that the typical\n        // size of your mesh triangles to avoid checking too many\n        // triangles for collision.\n        this.pointQuerySize = options.pointQuerySize;\n\n        this._buildQuadtree();\n        this._buildNeighbors();\n    }\n\n    _triangulate(polygons) {\n        const triangles = [];\n        for (const poly of polygons) {\n            const trianglesIndices = earcut(this._flatten(poly));\n            for (let i = 0; i < trianglesIndices.length / 3; i++) {\n                const indices = trianglesIndices.slice(i * 3, i * 3 + 3);\n                triangles.push(indices.map((j) => poly[j]));\n            }\n        }\n        return triangles;\n    }\n\n    _flatten(points) {\n        const flatPoints = [];\n        for (const point of points) {\n            if (point instanceof Array) {\n                flatPoints.push(...point);\n            } else {\n                flatPoints.push(point.x, point.y);\n            }\n        }\n        return flatPoints;\n    }\n\n    _buildQuadtree() {\n        // Use quad tree because the naive approach of iterating\n        // with two nested for loops over the polygons has performance\n        // n*lon(n), which for a 30x30 grid already takes a minute.\n        // This thing, for the same grid, takes 1 second, and scales linearly.\n        this.qt = QuadTree(-Infinity, -Infinity, Infinity, Infinity);\n        for (const poly of this.polygons) {\n            this.qt.put({\n                ...poly.boundsSize(),\n                polygon: poly,\n            });\n        }\n    }\n\n    _buildNeighbors() {\n        this.polygons.forEach((polygon) => (polygon.neighbors = {}));\n\n        for (let i = 0; i < this.polygons.length; i++) {\n            const poly1 = this.polygons[i];\n\n            for (const poly2wrap of this.qt.get(poly1.boundsSize())) {\n                const poly2 = poly2wrap.polygon;\n\n                if (poly1 === poly2) continue;\n                if (poly1.neighbors.hasOwnProperty(poly2._uuid)) continue;\n\n                const portal = this._computePortal(poly1, poly2);\n                if (portal !== null && portal.length() > 0) {\n                    // Ensure that portal points are given in left-to-right order, viewed from the centroid of the polygon\n                    let [p1, p2] = this._orderLeftRight(\n                        poly1.centroid(),\n                        portal.p1,\n                        portal.p2\n                    );\n                    poly1.neighbors[poly2._uuid] = {\n                        polygon: poly2,\n                        portal: new Edge(p1, p2),\n                    };\n                    poly2.neighbors[poly1._uuid] = {\n                        polygon: poly1,\n                        portal: new Edge(p2, p1),\n                    };\n                }\n            }\n        }\n    }\n\n    _computePortal(poly1, poly2) {\n        for (const edge1 of poly1.edges()) {\n            const edge2 = poly2.touches(edge1);\n            if (edge2 !== null) {\n                return edge1.overlap(edge2);\n            }\n        }\n\n        return null;\n    }\n\n    findPath(from, to) {\n        from = _normalizePoint(from);\n        to = _normalizePoint(to);\n\n        const path = this._findPath(from, to);\n        return path && this._funnel(from, to, path);\n    }\n\n    _findPath(from, to) {\n        // This is the A* algorithm\n        const fromPoly = this._findContainingPolygon(from);\n        const toPoly = this._findContainingPolygon(to);\n\n        if (fromPoly === null || toPoly === null) return null;\n\n        const frontier = new TinyQueue(\n            [{ cost: 0, polygon: fromPoly }],\n            (a, b) => a.cost - b.cost\n        );\n        const cameFrom = { [fromPoly._uuid]: null };\n        const cost = { [fromPoly._uuid]: 0 };\n\n        while (frontier.length) {\n            const current = frontier.pop().polygon;\n\n            if (current._uuid === toPoly._uuid) {\n                break;\n            }\n\n            for (const { polygon: next } of Object.values(current.neighbors)) {\n                const nextCost =\n                    cost[current._uuid] + this._computeCost(current, next);\n\n                if (\n                    // node not yet visited\n                    !cost.hasOwnProperty(next._uuid) ||\n                    // this path to node has lower cost\n                    nextCost < cost[next._uuid]\n                ) {\n                    frontier.push({\n                        cost: nextCost + this._heuristic(next, toPoly),\n                        polygon: next,\n                    });\n                    cost[next._uuid] = nextCost;\n                    cameFrom[next._uuid] = current;\n                }\n            }\n        }\n\n        return this._reconstructPath(toPoly, cameFrom);\n    }\n\n    _computeDistance(a, b) {\n        return a.centroidDistance(b);\n    }\n\n    _computeCost(a, b) {\n        const portal = a.neighbors[b._uuid].portal;\n        return this.costFunc(a, b, portal);\n    }\n\n    _heuristic(poly, to) {\n        if (poly._uuid == to._uuid) return 0;\n        return this.heuristicFunc(poly, to);\n    }\n\n    _findContainingPolygon(point) {\n        const halfQuerySize = this.pointQuerySize / 2;\n        const bounds = {\n            x: point.x - halfQuerySize,\n            y: point.y - halfQuerySize,\n            w: this.pointQuerySize,\n            h: this.pointQuerySize,\n        };\n        for (const poly of this.qt.get(bounds)) {\n            if (poly.polygon.contains(point)) return poly.polygon;\n        }\n\n        return null;\n    }\n\n    _reconstructPath(to, cameFrom) {\n        if (!cameFrom.hasOwnProperty(to._uuid)) {\n            // Disconnected\n            return null;\n        }\n\n        let current = to;\n\n        const path = [];\n        while (current !== null) {\n            path.push(current);\n            current = cameFrom[current._uuid];\n        }\n\n        return path.reverse();\n    }\n\n    /** Funnel algorithm, following https://medium.com/@reza.teshnizi/the-funnel-algorithm-explained-visually-41e374172d2d */\n    _funnel(from, to, path) {\n        if (path.length === 0) {\n            throw new Error(\"Path cannot be empty.\");\n        } else if (path.length === 1) {\n            return [from, to];\n        }\n\n        const tail = [from];\n        const left = [];\n        const right = [];\n\n        // Initialize funnel\n        const initialPortal = path[0].neighbors[path[1]._uuid].portal;\n        left.push(initialPortal.p1);\n        right.push(initialPortal.p2);\n\n        // Iterate over portals\n        for (let i = 1; i < path.length - 1; i++) {\n            const poly = path[i];\n            const nextPoly = path[i + 1];\n            const portal = poly.neighbors[nextPoly._uuid].portal;\n            // The portal end points are in left-to-right order, viewed from the inside of the polygon.\n            this._extendFunnel(tail, left, right, portal.p1, portal.p2);\n        }\n\n        // Close funnel to endpoint\n        this._extendFunnel(tail, left, right, to, to);\n\n        return tail;\n    }\n\n    _extendFunnel(tail, left, right, leftPoint, rightPoint) {\n        // Extend funnel on the left\n        this._extendFunnelSide(tail, left, right, true, leftPoint);\n        // Extend funnel on the right\n        this._extendFunnelSide(tail, left, right, false, rightPoint);\n    }\n\n    _extendFunnelSide(tail, left, right, extendLeft, newPoint) {\n        const apex = tail[tail.length - 1];\n        // We pretend to be in the `expandLeft` case here. Otherwise flip.\n        if (!extendLeft) {\n            [left, right] = [right, left];\n        }\n\n        // If `newPoint` is the end point of the left side of the funnel, skip it.\n        const lastLeft =\n            left.length === 0 ? tail[tail.length - 1] : left[left.length - 1];\n        if (newPoint.equals(lastLeft)) {\n            return;\n        }\n\n        // Determine how far to shrink the funnel\n        let j = this._findFirstLeftOfPoint(\n            apex,\n            left,\n            newPoint,\n            true,\n            !extendLeft\n        );\n        // All points in `left` with index `< j` are right of `newPoint` and\n        // all points in `left` with index `>= j` are left of or at the same angle as `newPoint`.\n        left.length = j; // Shrink funnel if `j < left.length`\n        left.push(newPoint);\n        if (j === 0) {\n            // If the funnel shrunk all the way on the left, it might collapse to the right.\n            // Determine how far it needs to collapse\n            let k = this._findFirstLeftOfPoint(\n                apex,\n                right,\n                newPoint,\n                false,\n                extendLeft\n            );\n            // All points in `right` with index `< k` are left of or at the same angle as `newPoint` and\n            // all points in `right` with index `>= k` are right of `newPoint`.\n            tail.push(...right.splice(0, k)); // Collapse funnel if `k > 0`\n        }\n    }\n\n    /**\n     * Given an array `arr` of points, find the index of the first one that is\n     * on the left side of a given point `p`, viewed from `origin`. If no such\n     * point exists, the length of the list is returned.\n     *\n     * If `flip` is true, find the first that is on the right side instead.\n     *\n     * If `acceptColinear` is true, the returned point may also be colinear.\n     */\n    _findFirstLeftOfPoint(origin, arr, p, acceptColinear, flip) {\n        let i;\n        for (i = 0; i < arr.length; i++) {\n            const found = flip\n                ? this._isInLeftRightOrder(origin, p, arr[i], acceptColinear)\n                : this._isInLeftRightOrder(origin, arr[i], p, acceptColinear);\n            if (found) return i;\n        }\n        return i;\n    }\n\n    /**\n     * Are the points `p1` and `p2` in left-to-right order, viewed from `origin`?\n     * If points are colinear, the value of `acceptColinear` is returned.\n     */\n    _isInLeftRightOrder(origin, p1, p2, acceptColinear = false) {\n        const vec1 = p1.sub(origin);\n        const vec2 = p2.sub(origin);\n        const c = cross(vec1, vec2);\n        return acceptColinear ? c <= 0 : c < 0;\n    }\n\n    /** Returns the points `p1` and `p2` in left-to-right order, viewed from `origin`. */\n    _orderLeftRight(origin, p1, p2) {\n        if (this._isInLeftRightOrder(origin, p1, p2)) {\n            return [p1, p2];\n        } else {\n            return [p2, p1];\n        }\n    }\n}\n","import { Vector, isclose, clip, dot, cross } from \"./math.js\";\nimport { Edge, Polygon, NavMesh } from \"./navmesh.js\";\n\nconst Point = Vector;\n\nexport { Point, Vector, isclose, clip, dot, cross, Edge, Polygon, NavMesh };\n"],"names":["root","factory","exports","module","define","amd","self","this","earcut","data","holeIndices","dim","minX","minY","maxX","maxY","x","y","invSize","hasHoles","length","outerLen","outerNode","linkedList","triangles","next","prev","i","len","list","queue","steiner","push","getLeftmost","sort","compareX","eliminateHole","eliminateHoles","Math","max","earcutLinked","start","end","clockwise","last","signedArea","insertNode","equals","removeNode","filterPoints","again","p","area","ear","pass","z","zOrder","prevZ","nextZ","q","e","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","a","b","c","ax","bx","cx","ay","by","cy","x0","y0","x1","y1","pointInTriangle","minZ","maxZ","n","intersects","locallyInside","isValidDiagonal","splitPolygon","hole","bridge","m","hx","hy","qx","tan","mx","my","tanMin","Infinity","abs","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","px","py","intersectsPolygon","inside","middleInside","r","p1","p2","q1","q2","o1","sign","o2","o3","o4","onSegment","min","num","a2","Node","b2","an","bp","sum","j","deviation","polygonArea","trianglesArea","flatten","result","vertices","holes","dimensions","holeIndex","d","point","vs","undefined","xi","yi","xj","yj","pointInPolygonFlat","pointInPolygonNested","Array","isArray","nested","flat","w","h","options","isNaN","maxc","leafratio","validate","obj","isequal","createnode","l","maxchildren","distance","x2","y2","sqrt","overlap_line","buf","dist","dx1","dy1","len1","t","s","distancePL","dx","dy","overlap_rect","isleaf","node","leaf","childnode","ni","put_to_nodes","put","update_coords","updatedcoords","update","attr","ci","orig","splice","remove","count","w2","h2","getter","overlapfun","strict","callbackOrArray","li","concat","get_rect","get","get_line","clear","stringify","strobj","JSON","err","parse","str","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","key","o","Object","defineProperty","enumerable","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","getRandomValues","EPS","Vector","_classCallCheck","Error","other","_normOther","isclose","acos","clip","dot","angle","cross","PI","eps","arguments","v","rnds8","Uint8Array","rng","crypto","bind","msCrypto","byteToHex","toString","substr","arr","offset","uuid","toLowerCase","test","TypeError","rnds","random","TinyQueue","constructor","compare","defaultCompare","_down","item","_up","pop","top","bottom","peek","pos","parent","current","halfLength","left","best","right","_normalizePoint","_construct","_toConsumableArray","Edge","_uuid","uuidv4","_createClass","sub","pointVec","parallel","direction","component","otherDirection","otherVec1","otherVec2","collinear","endpoints","onEdge","filter","findIndex","op","Polygon","points","map","bounds","_computeBounds","reduce","_this","acc","add","div","centroid","polyPoints","_toPointArray","_step","_iterator","_createForOfIteratorHelper","edges","done","edge","f","otherEdge","_step2","_iterator2","_this$bounds","_slicedToArray","minx","miny","NavMesh","polygons","_this2","heuristicFunc","_objectSpread","triangulate","pointQuerySize","console","warn","costFunc","_computeDistance","_triangulate","_buildQuadtree","_buildNeighbors","_step3","_this3","_iterator3","_loop","poly","trianglesIndices","_flatten","indices","slice","_step4","flatPoints","_iterator4","apply","qt","QuadTree","_step5","_iterator5","boundsSize","polygon","forEach","neighbors","_step6","poly1","_iterator6","poly2","portal","_computePortal","_this$_orderLeftRight2","_orderLeftRight","_step7","_iterator7","edge1","edge2","touches","overlap","from","to","path","_findPath","_funnel","fromPoly","_findContainingPolygon","toPoly","frontier","cost","cameFrom","_defineProperty","_i","_Object$values","values","nextCost","_computeCost","_heuristic","_reconstructPath","centroidDistance","_step8","halfQuerySize","_iterator8","contains","reverse","initialPortal","nextPoly","_extendFunnel","leftPoint","rightPoint","_extendFunnelSide","extendLeft","newPoint","apex","_ref","lastLeft","_findFirstLeftOfPoint","k","origin","acceptColinear","flip","_isInLeftRightOrder","Point"],"sourceRoot":""}